name: basic-registration
services:
    database:
        container_name: mysql
        image: mysql:8.1.0
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: users
            MYSQL_USER: batman
            MYSQL_PASSWORD: root
        networks:
            - basic_registration
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
            interval: 6s
            retries: 300
        volumes:
            - database-storage:/var/lib/mysql
            - ./InitDB:/docker-entrypoint-initdb.d
#    database_migrator:
#        container_name: db_migrator
#        build:
#            context: db_migrator
#        networks:
#            - basic_registration
#        depends_on:
#            database:
#                condition: service_healthy
    database_exporter:
        container_name: mysql_exporter
        image: prom/mysqld-exporter:v0.15.1
        ports:
            - "9104:9104"
        volumes:
            - ./DB_Exporter_Config/.my.cnf:/etc/mysql_exporter/my.cnf:ro
        command:
            - --config.my-cnf=/etc/mysql_exporter/my.cnf
        depends_on:
            - time_series_database
        networks:
            - basic_registration
    time_series_database:
        container_name: prometheus
        image: prom/prometheus:v3.2.1
        ports:
            - "9090:9090"
        depends_on:
            - load_balancer
        networks:
            - basic_registration
        volumes:
            - ./Monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus-storage:/prometheus
    visualizer:
        container_name: grafana
        image: grafana/grafana:11.6.0
        ports:
            - "3000:3000"
        depends_on:
            - time_series_database
        networks:
            - basic_registration
        volumes:
            - grafana-storage:/var/lib/grafana
    load_balancer:
        container_name: haproxy
        image: haproxy:3.1.1
        volumes:
            - ./Load_Balancer/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
        ports:
            - "8080:8080"
        depends_on:
            - backend_1
            - backend_2
            - backend_3
        networks:
            - basic_registration
    backend_1:
        container_name: registration_backend_1
        build: ./Backend/
        networks:
            - basic_registration
        depends_on:
            database:
                condition: service_healthy
#            database_migrator:
#                condition: service_completed_successfully
    backend_2:
        container_name: registration_backend_2
        build: ./Backend/
        networks:
            - basic_registration
        depends_on:
            database:
                condition: service_healthy
#            database_migrator:
#                condition: service_completed_successfully
    backend_3:
        container_name: registration_backend_3
        build: ./Backend/
        networks:
            - basic_registration
        depends_on:
            database:
                condition: service_healthy
#            database_migrator:
#                condition: service_completed_successfully
networks:
    basic_registration:
        driver: bridge
volumes:
    database-storage:
    grafana-storage:
    prometheus-storage:
